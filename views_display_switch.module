<?php

/**
 * @file
 * Contains views_display_switch.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_help().
 */
function views_display_switch_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the views_display_switch module.
    case 'help.page.views_display_switch':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides links to switch between displays in views') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function views_display_switch_theme() {
  return [
    'views_display_switch' => [
      'render element' => 'children',
      'variables' => [
        'links' => []
      ]
    ],
  ];
}

/**
 * Implements hook_views_data().
 */
function views_display_switch_views_data() {

  $data['views']['display_switch'] = [
    'title' => t('Display switch'),
    'help' => t('Provides links to switch diplays while keeping the filter criteria, sort criteria, pager settings and contextual filters.'),
    'area' => [
      'id' => 'display_switch',
    ],
  ];

  return $data;
}


/**
 * Implements hook_views_pre_view().
 */
function views_display_switch_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  // @TODO: This is quite ugly. Is there a nicer way to do this?
  // Getting all plugin ids used in the header and the footer of the view.
  $handlers = [];
  $handlers += $view->getHandlers('header');
  $handlers += $view->getHandlers('footer');
  $plugin_ids = array_column($handlers, 'plugin_id');

  // Setting display in case a GET parameter is set.
  if (in_array('display_switch', $plugin_ids)) {
    $request_mode = \Drupal::request()->get('mode');
    if ($request_mode != $display_id) {
      $view->setDisplay($request_mode);
    }
  }
}
